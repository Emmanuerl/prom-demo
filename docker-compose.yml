services:
  postgres:
    image: postgres:16
    container_name: pg
    environment:
      - POSTGRES_USER=kruse
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=remontada
      - PGDATA=/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d remontada -U kruse"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - infra

  pg-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: pg-exporter
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgres://kruse:password@postgres:5432/remontada?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - infra
  
  pg-exporter-remote:
    image: prometheuscommunity/postgres-exporter
    container_name: pg-exporter-remote
    ports:
      - 9188:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://bsg_fraud:remontada@hackspace.notkruse.dev:5432/bsg?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - infra

  js-demo:
    build: ./javascript
    ports:
      - 8082:8080
    container_name: js-demo
    networks:
      - infra

  golang-demo:
    build: ./golang
    ports:
      - 8084:8080
    container_name: golang-demo
    networks:
    - infra

  python-demo:
    build: ./python
    ports:
      - 8086:8080
    container_name: python-demo
    networks:
      - infra

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - infra
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    restart: unless-stopped
    networks:
      - infra

volumes:
  postgres_data:
  prometheus_data:
  grafana:


networks:
  infra:
    driver: bridge